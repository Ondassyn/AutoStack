
{Copying}: ...

{Compiler}: ...
{Compiler}: SUCCESS

{Test}: ...
==> ~CORRECT DEFAULT CONSTRUCTOR : 0 SHOULD HAVE BEEN 0
==> ~CORRECT DEFAULT CONSTRUCTOR : 1 SHOULD HAVE BEEN 1
==> ~CORRECT DEFAULT CONSTRUCTOR : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT INIT_LIST CONSTRUCTOR : 7 SHOULD HAVE BEEN 7
==> ~CORRECT INIT_LIST CONSTRUCTOR : 0 SHOULD HAVE BEEN 0
==> ~CORRECT INIT_LIST CONSTRUCTOR : 13 SHOULD HAVE BEEN 13
==> ~CORRECT COPY CONSTRUCTOR : 7 SHOULD HAVE BEEN 7
==> ~CORRECT COPY CONSTRUCTOR : 0 SHOULD HAVE BEEN 0
==> ~CORRECT PUSH and POP : 16384 SHOULD HAVE BEEN 16384
==> ~CORRECT PUSH and POP : 15 SHOULD HAVE BEEN 15
==> ~CORRECT PUSH and POP : 8192 SHOULD HAVE BEEN 8192
==> ~CORRECT PUSH and POP : 14 SHOULD HAVE BEEN 14
==> ~CORRECT PUSH and POP : 4096 SHOULD HAVE BEEN 4096
==> ~CORRECT PUSH and POP : 13 SHOULD HAVE BEEN 13
==> ~CORRECT PUSH and POP : 2048 SHOULD HAVE BEEN 2048
==> ~CORRECT PUSH and POP : 12 SHOULD HAVE BEEN 12
==> ~CORRECT PUSH and POP : 1024 SHOULD HAVE BEEN 1024
==> ~CORRECT PUSH and POP : 11 SHOULD HAVE BEEN 11
==> ~CORRECT PUSH and POP : 512 SHOULD HAVE BEEN 512
==> ~CORRECT PUSH and POP : 10 SHOULD HAVE BEEN 10
==> ~CORRECT PUSH and POP : 256 SHOULD HAVE BEEN 256
==> ~CORRECT PUSH and POP : 9 SHOULD HAVE BEEN 9
==> ~CORRECT PUSH and POP : 128 SHOULD HAVE BEEN 128
==> ~CORRECT PUSH and POP : 8 SHOULD HAVE BEEN 8
==> ~CORRECT PUSH and POP : 64 SHOULD HAVE BEEN 64
==> ~CORRECT PUSH and POP : 7 SHOULD HAVE BEEN 7
==> ~CORRECT PUSH and POP : 32 SHOULD HAVE BEEN 32
==> ~CORRECT PUSH and POP : 6 SHOULD HAVE BEEN 6
==> ~CORRECT PUSH and POP : 16 SHOULD HAVE BEEN 16
==> ~CORRECT PUSH and POP : 5 SHOULD HAVE BEEN 5
==> ~CORRECT PUSH and POP : 8 SHOULD HAVE BEEN 8
==> ~CORRECT PUSH and POP : 4 SHOULD HAVE BEEN 4
==> ~CORRECT PUSH and POP : 4 SHOULD HAVE BEEN 4
==> ~CORRECT PUSH and POP : 3 SHOULD HAVE BEEN 3
==> ~CORRECT PUSH and POP : 2 SHOULD HAVE BEEN 2
==> ~CORRECT PUSH and POP : 2 SHOULD HAVE BEEN 2
==> ~CORRECT PUSH and POP : 1 SHOULD HAVE BEEN 1
==> ~CORRECT PUSH and POP : 1 SHOULD HAVE BEEN 1
==> ~CORRECT PUSH and POP : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT PUSH and POP : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551595 SHOULD HAVE BEEN 18446744073709551595
==> ~CORRECT ASSIGNMENT OPERATOR : 19 SHOULD HAVE BEEN 19
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551597 SHOULD HAVE BEEN 18446744073709551597
==> ~CORRECT ASSIGNMENT OPERATOR : 18 SHOULD HAVE BEEN 18
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551599 SHOULD HAVE BEEN 18446744073709551599
==> ~CORRECT ASSIGNMENT OPERATOR : 17 SHOULD HAVE BEEN 17
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551601 SHOULD HAVE BEEN 18446744073709551601
==> ~CORRECT ASSIGNMENT OPERATOR : 16 SHOULD HAVE BEEN 16
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551603 SHOULD HAVE BEEN 18446744073709551603
==> ~CORRECT ASSIGNMENT OPERATOR : 15 SHOULD HAVE BEEN 15
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551605 SHOULD HAVE BEEN 18446744073709551605
==> ~CORRECT ASSIGNMENT OPERATOR : 14 SHOULD HAVE BEEN 14
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551607 SHOULD HAVE BEEN 18446744073709551607
==> ~CORRECT ASSIGNMENT OPERATOR : 13 SHOULD HAVE BEEN 13
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551609 SHOULD HAVE BEEN 18446744073709551609
==> ~CORRECT ASSIGNMENT OPERATOR : 12 SHOULD HAVE BEEN 12
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551611 SHOULD HAVE BEEN 18446744073709551611
==> ~CORRECT ASSIGNMENT OPERATOR : 11 SHOULD HAVE BEEN 11
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551613 SHOULD HAVE BEEN 18446744073709551613
==> ~CORRECT ASSIGNMENT OPERATOR : 10 SHOULD HAVE BEEN 10
==> ~CORRECT ASSIGNMENT OPERATOR : 18446744073709551615 SHOULD HAVE BEEN 18446744073709551615
==> ~CORRECT ASSIGNMENT OPERATOR : 9 SHOULD HAVE BEEN 9
==> ~CORRECT ASSIGNMENT OPERATOR : 1 SHOULD HAVE BEEN 1
==> ~CORRECT ASSIGNMENT OPERATOR : 8 SHOULD HAVE BEEN 8
==> ~CORRECT ASSIGNMENT OPERATOR : 13 SHOULD HAVE BEEN 13
==> ~CORRECT ASSIGNMENT OPERATOR : 7 SHOULD HAVE BEEN 7
==> ~CORRECT ASSIGNMENT OPERATOR : 11 SHOULD HAVE BEEN 11
==> ~CORRECT ASSIGNMENT OPERATOR : 6 SHOULD HAVE BEEN 6
==> ~CORRECT ASSIGNMENT OPERATOR : 9 SHOULD HAVE BEEN 9
==> ~CORRECT ASSIGNMENT OPERATOR : 5 SHOULD HAVE BEEN 5
==> ~CORRECT ASSIGNMENT OPERATOR : 7 SHOULD HAVE BEEN 7
==> ~CORRECT ASSIGNMENT OPERATOR : 4 SHOULD HAVE BEEN 4
==> ~CORRECT ASSIGNMENT OPERATOR : 5 SHOULD HAVE BEEN 5
==> ~CORRECT ASSIGNMENT OPERATOR : 3 SHOULD HAVE BEEN 3
==> ~CORRECT ASSIGNMENT OPERATOR : 3 SHOULD HAVE BEEN 3
==> ~CORRECT ASSIGNMENT OPERATOR : 2 SHOULD HAVE BEEN 2
==> ~CORRECT ASSIGNMENT OPERATOR : 1 SHOULD HAVE BEEN 1
==> ~CORRECT ASSIGNMENT OPERATOR : 1 SHOULD HAVE BEEN 1
==> ~CORRECT ASSIGNMENT OPERATOR : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT ASSIGNMENT OPERATOR : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT SELF ASSIGNMENT : 18446744073709551601 SHOULD HAVE BEEN 18446744073709551601
==> ~CORRECT SELF ASSIGNMENT : 16 SHOULD HAVE BEEN 16
==> ~CORRECT CLEAR : 0 SHOULD HAVE BEEN 0
==> ~CORRECT CLEAR : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT CLEAR : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT WHAT'S MEANING OF LIFE? : 42 SHOULD HAVE BEEN 42
==> 
==> TESTS RUN: 86
==> 
==> TESTS CORRECT: 86

{Valgrind}: ...
==> ==19455== Memcheck, a memory error detector
==> ==19455== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==> ==19455== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==> ==19455== Command: /home/ondassyn/CSCI152/AutoStack/subms/Murat\ Merekov_91323_assignsubmission_file_/main
==> ==19455== 
==> ==19455== Invalid write of size 8
==> ==19455==    at 0x404D43: stack::operator=(stack const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Murat Merekov_91323_assignsubmission_file_/main)
==> ==19455==    by 0x401BB9: main (in /home/ondassyn/CSCI152/AutoStack/subms/Murat Merekov_91323_assignsubmission_file_/main)
==> ==19455==  Address 0x5ab8538 is 24 bytes inside a block of size 28 alloc'd
==> ==19455==    at 0x4C2E80F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==> ==19455==    by 0x404A59: stack::stack(stack const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Murat Merekov_91323_assignsubmission_file_/main)
==> ==19455==    by 0x401603: main (in /home/ondassyn/CSCI152/AutoStack/subms/Murat Merekov_91323_assignsubmission_file_/main)
==> ==19455== 
==> 
==> valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
==> valgrind: Heap block lo/hi size mismatch: lo = 96, hi = 18446744013580009459.
==> This is probably caused by your program erroneously writing past the
==> end of a heap block and corrupting heap metadata.  If you fix any
==> invalid writes reported by Memcheck, this assertion failure will
==> probably go away.  Please try that before reporting this as a bug.
==> 
==> 
==> host stacktrace:
==> ==19455==    at 0x38083F48: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19455==    by 0x38084064: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19455==    by 0x380841F1: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19455==    by 0x38091A9C: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19455==    by 0x3807D673: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19455==    by 0x3807BF03: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19455==    by 0x380800DA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19455==    by 0x3807B49A: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19455==    by 0x802DDA832: ???
==> ==19455==    by 0x802CA9F2F: ???
==> ==19455==    by 0x8020082DF: ???
==> ==19455==    by 0x401BAC: main (in /home/ondassyn/CSCI152/AutoStack/subms/Murat Merekov_91323_assignsubmission_file_/main)
==> 
==> sched status:
==>   running_tid=1
==> 
==> Thread 1: status = VgTs_Runnable (lwpid 19455)
==> ==19455==    at 0x404D60: stack::operator=(stack const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Murat Merekov_91323_assignsubmission_file_/main)
==> ==19455==    by 0x401BB9: main (in /home/ondassyn/CSCI152/AutoStack/subms/Murat Merekov_91323_assignsubmission_file_/main)
==> 
==> 
==> Note: see also the FAQ in the source distribution.
==> It contains workarounds to several common problems.
==> In particular, if Valgrind aborted or crashed after
==> identifying problems in your program, there's a good chance
==> that fixing those problems will prevent Valgrind aborting or
==> crashing, especially if it happened in m_mallocfree.c.
==> 
==> If that doesn't help, please report this bug to: www.valgrind.org
==> 
==> In the bug report, send all the above text, the valgrind
==> version, and what OS and version you are using.  Thanks.
==> 
