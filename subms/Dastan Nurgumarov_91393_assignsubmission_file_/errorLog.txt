
{Copying}: ...

{Compiler}: ...
==> stack.cpp: In member function ‘void stack::push(int)’:
==> stack.cpp:55:41: warning: ISO C++ forbids variable length array ‘newvalues’ [-Wvla]
==>          int newvalues[2 * array_capacity];
==>                                          ^
{Compiler}: SUCCESS

{Test}: ...
==> ~CORRECT DEFAULT CONSTRUCTOR : 0 SHOULD HAVE BEEN 0
==> ~CORRECT DEFAULT CONSTRUCTOR : 1 SHOULD HAVE BEEN 1
==> ~CORRECT DEFAULT CONSTRUCTOR : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT INIT_LIST CONSTRUCTOR : 7 SHOULD HAVE BEEN 7
==> ~CORRECT INIT_LIST CONSTRUCTOR : 0 SHOULD HAVE BEEN 0
==> ~CORRECT INIT_LIST CONSTRUCTOR : 13 SHOULD HAVE BEEN 13
==> ~CORRECT COPY CONSTRUCTOR : 7 SHOULD HAVE BEEN 7
==> ~CORRECT COPY CONSTRUCTOR : 0 SHOULD HAVE BEEN 0
==> ~CORRECT PUSH and POP : 16384 SHOULD HAVE BEEN 16384
==> ~CORRECT PUSH and POP : 15 SHOULD HAVE BEEN 15
==> ~CORRECT PUSH and POP : 8192 SHOULD HAVE BEEN 8192
==> ~CORRECT PUSH and POP : 14 SHOULD HAVE BEEN 14
==> ~CORRECT PUSH and POP : 4096 SHOULD HAVE BEEN 4096
==> ~CORRECT PUSH and POP : 13 SHOULD HAVE BEEN 13
==> ~INCORRECT PUSH and POP : 18446744073218393671 SHOULD HAVE BEEN 2048
==> ~CORRECT PUSH and POP : 12 SHOULD HAVE BEEN 12
==> ~INCORRECT PUSH and POP : 18446744073643170816 SHOULD HAVE BEEN 1024
==> ~CORRECT PUSH and POP : 11 SHOULD HAVE BEEN 11
==> ~INCORRECT PUSH and POP : 0 SHOULD HAVE BEEN 512
==> ~CORRECT PUSH and POP : 10 SHOULD HAVE BEEN 10
==> ~INCORRECT PUSH and POP : 0 SHOULD HAVE BEEN 256
==> ~CORRECT PUSH and POP : 9 SHOULD HAVE BEEN 9
==> ~INCORRECT PUSH and POP : 0 SHOULD HAVE BEEN 128
==> ~CORRECT PUSH and POP : 8 SHOULD HAVE BEEN 8
==> ~INCORRECT PUSH and POP : 6316320 SHOULD HAVE BEEN 64
==> ~CORRECT PUSH and POP : 7 SHOULD HAVE BEEN 7
==> ~CORRECT PUSH and POP : 32 SHOULD HAVE BEEN 32
==> ~CORRECT PUSH and POP : 6 SHOULD HAVE BEEN 6
==> ~INCORRECT PUSH and POP : 1 SHOULD HAVE BEEN 16
==> ~CORRECT PUSH and POP : 5 SHOULD HAVE BEEN 5
==> ~INCORRECT PUSH and POP : 32527 SHOULD HAVE BEEN 8
==> ~CORRECT PUSH and POP : 4 SHOULD HAVE BEEN 4
==> ~INCORRECT PUSH and POP : 813790874 SHOULD HAVE BEEN 4
==> ~CORRECT PUSH and POP : 3 SHOULD HAVE BEEN 3
==> ~INCORRECT PUSH and POP : 0 SHOULD HAVE BEEN 2
==> ~CORRECT PUSH and POP : 2 SHOULD HAVE BEEN 2
==> ~INCORRECT PUSH and POP : 0 SHOULD HAVE BEEN 1
==> ~CORRECT PUSH and POP : 1 SHOULD HAVE BEEN 1
==> ~CORRECT PUSH and POP : EXCEPTION HAS BEEN CAUGHT
==> ~CORRECT PUSH and POP : EXCEPTION HAS BEEN CAUGHT

{Valgrind}: ...
==> ==19516== Memcheck, a memory error detector
==> ==19516== Copyright (C) 2002-2015, and GNU GPL'd, by Julian Seward et al.
==> ==19516== Using Valgrind-3.11.0 and LibVEX; rerun with -h for copyright info
==> ==19516== Command: /home/ondassyn/CSCI152/AutoStack/subms/Dastan\ Nurgumarov_91393_assignsubmission_file_/main
==> ==19516== 
==> ==19516== Conditional jump or move depends on uninitialised value(s)
==> ==19516==    at 0x402837: checkSizet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long const&, unsigned long const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x4017D6: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516== 
==> ==19516== Use of uninitialised value of size 8
==> ==19516==    at 0x4F3BB13: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==> ==19516==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==> ==19516==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==> ==19516==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==> ==19516==    by 0x4028FD: checkSizet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long const&, unsigned long const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x4017D6: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516== 
==> ==19516== Conditional jump or move depends on uninitialised value(s)
==> ==19516==    at 0x4F3BB1F: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==> ==19516==    by 0x4F3D1BB: std::ostreambuf_iterator<char, std::char_traits<char> > std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::_M_insert_int<unsigned long>(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==> ==19516==    by 0x4F3D36C: std::num_put<char, std::ostreambuf_iterator<char, std::char_traits<char> > >::do_put(std::ostreambuf_iterator<char, std::char_traits<char> >, std::ios_base&, char, unsigned long) const (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==> ==19516==    by 0x4F49699: std::ostream& std::ostream::_M_insert<unsigned long>(unsigned long) (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.21)
==> ==19516==    by 0x4028FD: checkSizet(std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, unsigned long const&, unsigned long const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x4017D6: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516== 
==> ==19516== Invalid read of size 4
==> ==19516==    at 0x404F2C: stack::peek() const (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x4017B8: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==  Address 0xffefff9a4 is on thread 1's stack
==> ==19516==  132 bytes below stack pointer
==> ==19516== 
==> ==19516== Invalid free() / delete / delete[] / realloc()
==> ==19516==    at 0x4C2F74B: operator delete[](void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==> ==19516==    by 0x404EDE: stack::push(int) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x4019D8: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==  Address 0xffefff9a0 is on thread 1's stack
==> ==19516==  in frame #1, created by stack::push(int) (???:)
==> ==19516== 
==> ==19516== Invalid write of size 8
==> ==19516==    at 0x404BBC: stack::operator=(stack const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x401A99: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==  Address 0x5ab84a0 is 0 bytes inside a block of size 28 free'd
==> ==19516==    at 0x4C2F74B: operator delete[](void*) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==> ==19516==    by 0x404B03: stack::operator=(stack const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x401A99: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==  Block was alloc'd at
==> ==19516==    at 0x4C2E80F: operator new[](unsigned long) (in /usr/lib/valgrind/vgpreload_memcheck-amd64-linux.so)
==> ==19516==    by 0x40490B: stack::stack(stack const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x4014E3: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516== 
==> 
==> valgrind: m_mallocfree.c:303 (get_bszB_as_is): Assertion 'bszB_lo == bszB_hi' failed.
==> valgrind: Heap block lo/hi size mismatch: lo = 96, hi = 28.
==> This is probably caused by your program erroneously writing past the
==> end of a heap block and corrupting heap metadata.  If you fix any
==> invalid writes reported by Memcheck, this assertion failure will
==> probably go away.  Please try that before reporting this as a bug.
==> 
==> 
==> host stacktrace:
==> ==19516==    at 0x38083F48: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19516==    by 0x38084064: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19516==    by 0x380841F1: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19516==    by 0x38091A9C: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19516==    by 0x3807D673: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19516==    by 0x3807BF03: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19516==    by 0x380800DA: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19516==    by 0x3807B49A: ??? (in /usr/lib/valgrind/memcheck-amd64-linux)
==> ==19516==    by 0x802DD7955: ???
==> ==19516==    by 0x802CA9F2F: ???
==> ==19516==    by 0x8020082DF: ???
==> ==19516==    by 0x404B03: stack::operator=(stack const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x804D2BFFF: ???
==> ==19516==    by 0xF3C0: ???
==> 
==> sched status:
==>   running_tid=1
==> 
==> Thread 1: status = VgTs_Runnable (lwpid 19516)
==> ==19516==    at 0x404BD5: stack::operator=(stack const&) (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> ==19516==    by 0x401A99: main (in /home/ondassyn/CSCI152/AutoStack/subms/Dastan Nurgumarov_91393_assignsubmission_file_/main)
==> 
==> 
==> Note: see also the FAQ in the source distribution.
==> It contains workarounds to several common problems.
==> In particular, if Valgrind aborted or crashed after
==> identifying problems in your program, there's a good chance
==> that fixing those problems will prevent Valgrind aborting or
==> crashing, especially if it happened in m_mallocfree.c.
==> 
==> If that doesn't help, please report this bug to: www.valgrind.org
==> 
==> In the bug report, send all the above text, the valgrind
==> version, and what OS and version you are using.  Thanks.
==> 
